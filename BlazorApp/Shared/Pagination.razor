@if (PagesCount > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(CurrentPage < 2 ? "disabled" : "")">
                <button class="page-link" tabindex="-1" @onclick="()=> { Parent.GoToPage(CurrentPage - 1); }">Previous</button>
            </li>
            <li class="page-item @(CurrentPage == 1 ? "active" : "")">
                <button class="page-link" @onclick="()=> { Parent.GoToPage(1); }">1</button>
            </li>

            @if (PagesCount < 10)
            {
                @for (int i = 2; i < PagesCount; i++)
                {
                    int index = i;
                    <li class="page-item @(CurrentPage == i ? "active" : "")">
                        <button class="page-link" @onclick="()=> { Parent.GoToPage(index); }">@i</button>
                    </li>
                }
            }
            else
            {
                @if (CurrentPage > 3)
                {
                    <li style="padding: 0 12px 0 14px; letter-spacing: 4px; font-weight: bolder;">...</li>
                }

                if (CurrentPage == PagesCount)
                {
                    <li class="page-item">
                        <button class="page-link" @onclick="()=> { Parent.GoToPage(CurrentPage - 2); }">@(CurrentPage - 2)</button>
                    </li>
                }

                if (CurrentPage > 2)
                {
                    <li class="page-item">
                        <button class="page-link" @onclick="()=> { Parent.GoToPage(CurrentPage - 1); }">@(CurrentPage - 1)</button>
                    </li>
                }

                if (CurrentPage != 1 && CurrentPage != PagesCount)
                {
                    <li class="page-item active">
                        <button class="page-link" @onclick="()=> { Parent.GoToPage(CurrentPage); }">@CurrentPage</button>
                    </li>
                }


                if (CurrentPage < PagesCount - 1)
                {
                    <li class="page-item ">
                        <button class="page-link" @onclick="()=> { Parent.GoToPage(CurrentPage + 1); }">@(CurrentPage + 1)</button>
                    </li>
                }

                if (CurrentPage == 1)
                {
                    <li class="page-item">
                        <button class="page-link" @onclick="()=> { Parent.GoToPage(CurrentPage + 2); }">@(CurrentPage + 2)</button>
                    </li>
                }

                @if (CurrentPage < PagesCount - 2)
                {
                    <li style="padding: 0 12px 0 14px; letter-spacing: 4px; font-weight: bolder;">...</li>
                }

            }

            <li class="page-item @(CurrentPage == PagesCount ? "active" : "")">
                <button class="page-link" @onclick="()=> { Parent.GoToPage(PagesCount); }">@PagesCount</button>
            </li>
            <li class="page-item @(CurrentPage >= PagesCount ? "disabled" : "")">
                <button class="page-link" @onclick="()=> { Parent.GoToPage(CurrentPage + 1); }">Next</button>
            </li>
        </ul>
    </nav>
}


@code {
    /// <summary>
    /// Total pages count.
    /// </summary>
    [Parameter] public int PagesCount { get; set; }

    /// <summary>
    /// Selected page number.
    /// </summary>
    [Parameter] public int CurrentPage { get; set; }

    /// <summary>
    /// Reference to the parent Grid.
    /// </summary>
    [CascadingParameter(Name = "UpdateModal")] public GenericList<User> Parent { get; set; }
}
