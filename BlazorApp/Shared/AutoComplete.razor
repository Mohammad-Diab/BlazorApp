@typeparam T

@if (!string.IsNullOrEmpty(Title))
{
    <h5>@Title</h5>
}
<div style="height: 3rem;" class="form-control autoComplete my-2 position-relative">
        @for (int i = 0; i < SelectedItems?.Count; i++)
        {
            int index = i;
            <div class="badge badge-primary mx-1">
                <span class="align-middle mx-2 d-inline-block">@SelectedItems[i].Value</span>
                <button type="button" style="float: unset; clear: both" class="mr-1 mb-1 close align-middle" aria-label="Close" @onclick="() => RemoveItem(SelectedItems[index])">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
    <input placeholder="Start typing here..." @bind="TextInputValue" @bind:event="oninput" @onblur="InputBlur" @onfocus="ShowList"/>
    <div style="height: 1.5rem; margin-top: 0.3rem; flex: 0 0 1.5rem;" class="spinner-border text-success spinner-border-sm @(isLoading ? "" : "d-none")" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>



<div class="@(isShown ? "" : "d-none") list-group position-absolute" style=" margin-top: -.25rem; min-width: 16rem; z-index: 999; box-shadow: 0 1px 4px 1px rgba(0, 0, 0, 0.28); border-radius: 0.25rem;" @onfocus="() => { isOut = false; }" @onblur="InputBlur">
    @if ((AutoCompleteList?.Count ?? 0) > 0)
    {
            @for (int i = 0; i < AutoCompleteList?.Count; i++)
            {
                int index = i;
                <button type="button" class="list-group-item list-group-item-action" @onclick="() => AddSelectedItem(AutoCompleteList[index])" @onfocusout="InputBlur" @onfocus="() => { isOut = false; }">@AutoCompleteList[i].Value</button>
            }
    }
    else
    {
        <button type="button" class="list-group-item list-group-item-action disabled text-center text-muted" @onfocus="() => { isOut = false; }" @onfocusout="InputBlur">❗ No items match your filter...</button>
    }

</div>
