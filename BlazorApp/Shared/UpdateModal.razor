@typeparam T

<Modal @ref="ModalRef" ModalClasses="modal-lg" ShowAnimation="ModalShowAnimation.BounceInDown">
        <div class="alert alert-danger d-none" role="alert">
            This is a primary alert—check it out!
        </div>
        @if (Properties != null)
        {
            @for (int i = 0; i < Properties.Count; i += 2)
            {
                int index = i;
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <DataInput Item="Properties[index]"></DataInput>
                    </div>

                    @if (index + 1 < Properties.Count)
                    {
                        <div class="col-md-6 mb-3">
                            <DataInput Item="Properties[index + 1]"></DataInput>
                        </div>
                    }
                </div>
            }
        }
</Modal>


@code {

    [Parameter] public List<Property> Properties { get; set; }
    [Parameter] public T ItemType { get; set; }
    DialogMode DialogMode { get; set; }
    Modal ModalRef;

    T Item { get; set; }

    public async Task<(DialogResult ModalResult, T NewItem)> ShowModal(string ModalTitle, DialogMode Mode, string ItemId = null, T Item = default(T))
    {
        DialogMode = Mode;
        this.Item = Item;
        ModalConfirmButton mode = ModalConfirmButton.Add;
        if (Mode == DialogMode.Edit)
        {
            mode = ModalConfirmButton.Edit;
            for (int i = 0; i < Properties.Count; i++)
            {
                var prop = typeof(T).GetProperty(Properties[i].Key);
                var value = prop.GetValue(Item);
                Properties[i].DefaultValue = (value is DateTime) ? ((DateTime)prop.GetValue(Item)).ToString("yyyy-MM-dd") : prop.GetValue(Item).ToString();
            }
        }
        else
        {
            for (int i = 0; i < Properties.Count; i++)
            {
                Properties[i].DefaultValue = "";
            }
        }

        var ModalResult = await ModalRef.ShowModal(ModalTitle, mode);

        T updatedItem = default(T);

        if (ModalResult == DialogResult.Ok)
        {
            var param = new List<object>();
            if (Mode == DialogMode.Edit)
                param.Add(ItemId);

            for (int i = 0; i < Properties.Count; i++)
            {
                param.Add(Properties[i].DefaultValue);
            }

            updatedItem = (T)Activator.CreateInstance(typeof(T), param.ToArray());
        }

        return (ModalResult, updatedItem);

    }

}
