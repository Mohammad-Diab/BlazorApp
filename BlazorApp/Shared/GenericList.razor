@typeparam T
@if (EditAbility)
{
    <div class="mt-1 mb-3">
        <button class="btn btn-primary" @onclick="AddItem">
            <span class="oi oi-plus"></span>
            <span>Add</span>
        </button>
    </div>
    <UpdateModal @ref="Modal" ItemType="ItemType" Properties="ItemProperties"></UpdateModal>
}

@if (ItemsList == null)
{
    <text>Loading...</text>
}
else if (ItemsList.Count == 0)
{
    <text>No item to show.</text>
}
else
{<CascadingValue Value="@Modal">
    <table style="table-layout: fixed" class="table">
        <thead>
            @TableHeader
        </thead>

        <tbody>
            @for (int i = 0; i < ItemsList.Count; i++)
            {
                int index = i;

                @ItemRender(ItemsList[i]);
            }
        </tbody>
        
    </table>
    </CascadingValue>
}
<h3>@Title</h3>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public List<T> ItemsList { get; set; }
    [Parameter] public bool EditAbility { get; set; }
    [Parameter] public List<Property> ItemProperties { get; set; }
    //[Parameter] public EventCallback AddItem { get; set; }
    [Parameter] public RenderFragment TableHeader { get; set; }
    [Parameter] public RenderFragment<T> ItemRender { get; set; }

    T ItemType = default(T);

    UpdateModal<T> Modal;

    void AddItem()
    {
        Modal.ShowModal("Add new item", DialogMode.Add);
    }

}
